/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  Receta as PrismaReceta,
  Producto as PrismaProducto,
  MateriaPrima as PrismaMateriaPrima,
} from "@prisma/client";

export class RecetaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RecetaCountArgs, "select">): Promise<number> {
    return this.prisma.receta.count(args);
  }

  async recetas(args: Prisma.RecetaFindManyArgs): Promise<PrismaReceta[]> {
    return this.prisma.receta.findMany(args);
  }
  async receta(
    args: Prisma.RecetaFindUniqueArgs
  ): Promise<PrismaReceta | null> {
    return this.prisma.receta.findUnique(args);
  }
  async createReceta(args: Prisma.RecetaCreateArgs): Promise<PrismaReceta> {
    return this.prisma.receta.create(args);
  }
  async updateReceta(args: Prisma.RecetaUpdateArgs): Promise<PrismaReceta> {
    return this.prisma.receta.update(args);
  }
  async deleteReceta(args: Prisma.RecetaDeleteArgs): Promise<PrismaReceta> {
    return this.prisma.receta.delete(args);
  }

  async getProducto(parentId: string): Promise<PrismaProducto | null> {
    return this.prisma.receta
      .findUnique({
        where: { id: parentId },
      })
      .producto();
  }

  async getMateriaPrima(parentId: string): Promise<PrismaMateriaPrima | null> {
    return this.prisma.receta
      .findUnique({
        where: { id: parentId },
      })
      .materiaPrima();
  }
}
